import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from io import StringIO

# Embedded CSV data for input
csv_data = StringIO("""
id,age,gender,height,weight,ap_hi,ap_lo,cholesterol,gluc,smoke,alco,active,cardio
0,18393,2,168,62,110,80,1,1,0,0,1,0
1,20228,1,156,85,140,90,3,1,0,0,1,1
2,18857,1,165,64,130,70,1,1,0,0,0,1
3,17623,2,169,82,150,100,2,2,0,0,1,1
4,17474,1,156,56,100,60,1,1,0,0,0,0
5,21914,2,158,70,130,90,3,1,0,0,0,1
6,21614,1,183,96,120,80,1,1,0,0,1,0
7,18074,2,165,74,130,70,1,1,0,0,0,0
8,21675,1,170,72,140,90,2,1,0,0,0,0
9,21925,2,160,60,120,80,1,1,0,0,0,0
""")

# Load dataset
df = pd.read_csv(csv_data)

# Add 'overweight' column
df['BMI'] = df['weight'] / ((df['height'] / 100) ** 2)
df['overweight'] = (df['BMI'] > 25).astype(int)

# Normalize 'cholesterol' and 'gluc'
df['cholesterol'] = (df['cholesterol'] > 1).astype(int)
df['gluc'] = (df['gluc'] > 1).astype(int)

# Draw categorical plot
def draw_cat_plot():
    df_cat = pd.melt(df,
                     id_vars=['cardio'],
                     value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'])

    df_cat = df_cat.value_counts().reset_index(name='total')

    fig = sns.catplot(data=df_cat,
                      x='variable',
                      y='total',
                      hue='value',
                      col='cardio',
                      kind='bar').fig
    return fig

# Draw heatmap
def draw_heat_map():
    df_heat = df[
        (df['ap_lo'] <= df['ap_hi']) &
        (df['height'] >= df['height'].quantile(0.025)) &
        (df['height'] <= df['height'].quantile(0.975)) &
        (df['weight'] >= df['weight'].quantile(0.025)) &
        (df['weight'] <= df['weight'].quantile(0.975))
    ]

    corr = df_heat.corr()
    mask = np.triu(np.ones_like(corr, dtype=bool))

    fig, ax = plt.subplots(figsize=(10, 8))
    sns.heatmap(corr, mask=mask, annot=True, fmt='.1f',
                center=0, square=True, linewidths=.5, cbar_kws={"shrink": 0.5}, ax=ax)
    return fig

# Run the code in an online compiler
if __name__ == "__main__":
    cat_plot = draw_cat_plot()
    heat_map = draw_heat_map()

    # Save output plots
    cat_plot.savefig("catplot.png")
    heat_map.savefig("heatmap.png")

    print("Plots generated and saved as 'catplot.png' and 'heatmap.png'")
